# Tests for the equidistant category.
#
# - This file was auto-generated by gentests.pl -
#
AT_BANNER([[Equidistant Interval Tests.]])
AT_CHECK_ENCODE_DECODE([Distance 1 u16/hex],[--u16],[equidistant_distance_1.hex])
AT_CHECK_CONTAINS([Distance 1 u16/hex contains 0x0],[--u16],[equidistant_distance_1.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 1 u16/hex contains 0x10],[--u16],[equidistant_distance_1.hex],[10],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 1 u16/hex does not contain 0xa1],[--u16],[equidistant_distance_1.hex],[a1],[EXIT_FAILURE])
AT_CHECK_ENCODE_DECODE([Distance 2 u16/hex],[--u16],[equidistant_distance_2.hex])
AT_CHECK_CONTAINS([Distance 2 u16/hex contains 0x0],[--u16],[equidistant_distance_2.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 2 u16/hex does not contain 0xa1],[--u16],[equidistant_distance_2.hex],[a1],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Distance 2 u16/hex contains 0x20],[--u16],[equidistant_distance_2.hex],[20],[EXIT_SUCCESS])
AT_CHECK_ENCODE_DECODE([Distance 3 u16/hex],[--u16],[equidistant_distance_3.hex])
AT_CHECK_CONTAINS([Distance 3 u16/hex contains 0x0],[--u16],[equidistant_distance_3.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 3 u16/hex does not contain 0xa1],[--u16],[equidistant_distance_3.hex],[a1],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Distance 3 u16/hex contains 0x30],[--u16],[equidistant_distance_3.hex],[30],[EXIT_SUCCESS])
AT_CHECK_ENCODE_DECODE([Distance 100 u16/hex],[--u16],[equidistant_distance_100.hex])
AT_CHECK_CONTAINS([Distance 100 u16/hex contains 0x0],[--u16],[equidistant_distance_100.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 100 u16/hex contains 0x640],[--u16],[equidistant_distance_100.hex],[640],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 100 u16/hex does not contain 0xa1],[--u16],[equidistant_distance_100.hex],[a1],[EXIT_FAILURE])
AT_CHECK_ENCODE_DECODE([Alternating u16/hex],[--u16],[equidistant_alternating.hex])
AT_CHECK_CONTAINS([Alternating u16/hex contains 0x0],[--u16],[equidistant_alternating.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u16/hex does not contain 0x1],[--u16],[equidistant_alternating.hex],[1],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Alternating u16/hex does not contain 0x2],[--u16],[equidistant_alternating.hex],[2],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Alternating u16/hex contains 0x3],[--u16],[equidistant_alternating.hex],[3],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u16/hex contains 0x4],[--u16],[equidistant_alternating.hex],[4],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u16/hex does not contain 0x5],[--u16],[equidistant_alternating.hex],[5],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Alternating u16/hex does not contain 0x6],[--u16],[equidistant_alternating.hex],[6],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Alternating u16/hex contains 0x7],[--u16],[equidistant_alternating.hex],[7],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u16/hex contains 0x8],[--u16],[equidistant_alternating.hex],[8],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u16/hex does not contain 0x9],[--u16],[equidistant_alternating.hex],[9],[EXIT_FAILURE])
AT_CHECK_ENCODE_DECODE([Multiple u16/hex],[--u16],[equidistant_multiple.hex])
AT_CHECK_ENCODE_DECODE([Many small u16/hex],[--u16],[equidistant_many_small.hex])
AT_CHECK_ENCODE_DECODE([Distance 1 u32/hex],[--u32],[equidistant_distance_1.hex])
AT_CHECK_CONTAINS([Distance 1 u32/hex contains 0x0],[--u32],[equidistant_distance_1.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 1 u32/hex contains 0x10],[--u32],[equidistant_distance_1.hex],[10],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 1 u32/hex does not contain 0xa1],[--u32],[equidistant_distance_1.hex],[a1],[EXIT_FAILURE])
AT_CHECK_ENCODE_DECODE([Distance 2 u32/hex],[--u32],[equidistant_distance_2.hex])
AT_CHECK_CONTAINS([Distance 2 u32/hex contains 0x0],[--u32],[equidistant_distance_2.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 2 u32/hex does not contain 0xa1],[--u32],[equidistant_distance_2.hex],[a1],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Distance 2 u32/hex contains 0x20],[--u32],[equidistant_distance_2.hex],[20],[EXIT_SUCCESS])
AT_CHECK_ENCODE_DECODE([Distance 3 u32/hex],[--u32],[equidistant_distance_3.hex])
AT_CHECK_CONTAINS([Distance 3 u32/hex contains 0x0],[--u32],[equidistant_distance_3.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 3 u32/hex does not contain 0xa1],[--u32],[equidistant_distance_3.hex],[a1],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Distance 3 u32/hex contains 0x30],[--u32],[equidistant_distance_3.hex],[30],[EXIT_SUCCESS])
AT_CHECK_ENCODE_DECODE([Distance 100 u32/hex],[--u32],[equidistant_distance_100.hex])
AT_CHECK_CONTAINS([Distance 100 u32/hex contains 0x0],[--u32],[equidistant_distance_100.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 100 u32/hex contains 0x640],[--u32],[equidistant_distance_100.hex],[640],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 100 u32/hex does not contain 0xa1],[--u32],[equidistant_distance_100.hex],[a1],[EXIT_FAILURE])
AT_CHECK_ENCODE_DECODE([Alternating u32/hex],[--u32],[equidistant_alternating.hex])
AT_CHECK_CONTAINS([Alternating u32/hex contains 0x0],[--u32],[equidistant_alternating.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u32/hex does not contain 0x1],[--u32],[equidistant_alternating.hex],[1],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Alternating u32/hex does not contain 0x2],[--u32],[equidistant_alternating.hex],[2],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Alternating u32/hex contains 0x3],[--u32],[equidistant_alternating.hex],[3],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u32/hex contains 0x4],[--u32],[equidistant_alternating.hex],[4],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u32/hex does not contain 0x5],[--u32],[equidistant_alternating.hex],[5],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Alternating u32/hex does not contain 0x6],[--u32],[equidistant_alternating.hex],[6],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Alternating u32/hex contains 0x7],[--u32],[equidistant_alternating.hex],[7],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u32/hex contains 0x8],[--u32],[equidistant_alternating.hex],[8],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u32/hex does not contain 0x9],[--u32],[equidistant_alternating.hex],[9],[EXIT_FAILURE])
AT_CHECK_ENCODE_DECODE([Multiple u32/hex],[--u32],[equidistant_multiple.hex])
AT_CHECK_ENCODE_DECODE([Many small u32/hex],[--u32],[equidistant_many_small.hex])
AT_CHECK_ENCODE_DECODE([Distance 1 u64/hex],[--u64],[equidistant_distance_1.hex])
AT_CHECK_CONTAINS([Distance 1 u64/hex contains 0x0],[--u64],[equidistant_distance_1.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 1 u64/hex contains 0x10],[--u64],[equidistant_distance_1.hex],[10],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 1 u64/hex does not contain 0xa1],[--u64],[equidistant_distance_1.hex],[a1],[EXIT_FAILURE])
AT_CHECK_ENCODE_DECODE([Distance 2 u64/hex],[--u64],[equidistant_distance_2.hex])
AT_CHECK_CONTAINS([Distance 2 u64/hex contains 0x0],[--u64],[equidistant_distance_2.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 2 u64/hex does not contain 0xa1],[--u64],[equidistant_distance_2.hex],[a1],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Distance 2 u64/hex contains 0x20],[--u64],[equidistant_distance_2.hex],[20],[EXIT_SUCCESS])
AT_CHECK_ENCODE_DECODE([Distance 3 u64/hex],[--u64],[equidistant_distance_3.hex])
AT_CHECK_CONTAINS([Distance 3 u64/hex contains 0x0],[--u64],[equidistant_distance_3.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 3 u64/hex does not contain 0xa1],[--u64],[equidistant_distance_3.hex],[a1],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Distance 3 u64/hex contains 0x30],[--u64],[equidistant_distance_3.hex],[30],[EXIT_SUCCESS])
AT_CHECK_ENCODE_DECODE([Distance 100 u64/hex],[--u64],[equidistant_distance_100.hex])
AT_CHECK_CONTAINS([Distance 100 u64/hex contains 0x0],[--u64],[equidistant_distance_100.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 100 u64/hex contains 0x640],[--u64],[equidistant_distance_100.hex],[640],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Distance 100 u64/hex does not contain 0xa1],[--u64],[equidistant_distance_100.hex],[a1],[EXIT_FAILURE])
AT_CHECK_ENCODE_DECODE([Alternating u64/hex],[--u64],[equidistant_alternating.hex])
AT_CHECK_CONTAINS([Alternating u64/hex contains 0x0],[--u64],[equidistant_alternating.hex],[0],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u64/hex does not contain 0x1],[--u64],[equidistant_alternating.hex],[1],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Alternating u64/hex does not contain 0x2],[--u64],[equidistant_alternating.hex],[2],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Alternating u64/hex contains 0x3],[--u64],[equidistant_alternating.hex],[3],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u64/hex contains 0x4],[--u64],[equidistant_alternating.hex],[4],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u64/hex does not contain 0x5],[--u64],[equidistant_alternating.hex],[5],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Alternating u64/hex does not contain 0x6],[--u64],[equidistant_alternating.hex],[6],[EXIT_FAILURE])
AT_CHECK_CONTAINS([Alternating u64/hex contains 0x7],[--u64],[equidistant_alternating.hex],[7],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u64/hex contains 0x8],[--u64],[equidistant_alternating.hex],[8],[EXIT_SUCCESS])
AT_CHECK_CONTAINS([Alternating u64/hex does not contain 0x9],[--u64],[equidistant_alternating.hex],[9],[EXIT_FAILURE])
AT_CHECK_ENCODE_DECODE([Multiple u64/hex],[--u64],[equidistant_multiple.hex])
AT_CHECK_ENCODE_DECODE([Many small u64/hex],[--u64],[equidistant_many_small.hex])
AT_CHECK_DECODE_ENCODE([Any 16bit u16/bin],[--u16 --binary],[equidistant_any_16bit.u16.bin.iz])
AT_CHECK_ENCODED_CONTAINS([Any 16bit u16/bin contains 0x0],[--u16 --binary],[equidistant_any_16bit.u16.bin.iz],[0],[EXIT_SUCCESS])
AT_CHECK_ENCODED_CONTAINS([Any 16bit u16/bin contains 0x1],[--u16 --binary],[equidistant_any_16bit.u16.bin.iz],[1],[EXIT_SUCCESS])
AT_CHECK_ENCODED_CONTAINS([Any 16bit u16/bin contains 0xffff],[--u16 --binary],[equidistant_any_16bit.u16.bin.iz],[ffff],[EXIT_SUCCESS])
AT_CHECK_DECODE_ENCODE([Any 16bit except some u16/bin],[--u16 --binary],[equidistant_any_16bit_except_some.u16.bin.iz])
AT_CHECK_ENCODED_CONTAINS([Any 16bit except some u16/bin does not contain 0x0],[--u16 --binary],[equidistant_any_16bit_except_some.u16.bin.iz],[0],[EXIT_FAILURE])
AT_CHECK_ENCODED_CONTAINS([Any 16bit except some u16/bin contains 0x1],[--u16 --binary],[equidistant_any_16bit_except_some.u16.bin.iz],[1],[EXIT_SUCCESS])
AT_CHECK_ENCODED_CONTAINS([Any 16bit except some u16/bin does not contain 0x2],[--u16 --binary],[equidistant_any_16bit_except_some.u16.bin.iz],[2],[EXIT_FAILURE])
AT_CHECK_ENCODED_CONTAINS([Any 16bit except some u16/bin contains 0x100],[--u16 --binary],[equidistant_any_16bit_except_some.u16.bin.iz],[100],[EXIT_SUCCESS])
AT_CHECK_ENCODED_CONTAINS([Any 16bit except some u16/bin does not contain 0x101],[--u16 --binary],[equidistant_any_16bit_except_some.u16.bin.iz],[101],[EXIT_FAILURE])
AT_CHECK_ENCODED_CONTAINS([Any 16bit except some u16/bin contains 0x3],[--u16 --binary],[equidistant_any_16bit_except_some.u16.bin.iz],[3],[EXIT_SUCCESS])
AT_CHECK_ENCODED_CONTAINS([Any 16bit except some u16/bin does not contain 0x4],[--u16 --binary],[equidistant_any_16bit_except_some.u16.bin.iz],[4],[EXIT_FAILURE])
AT_CHECK_ENCODED_CONTAINS([Any 16bit except some u16/bin contains 0x32],[--u16 --binary],[equidistant_any_16bit_except_some.u16.bin.iz],[32],[EXIT_SUCCESS])
